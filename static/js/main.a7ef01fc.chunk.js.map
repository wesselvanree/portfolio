{"version":3,"sources":["images/hydrautronics.jpg","images/ivdh.jpg","Projects/Project.tsx","Projects/GithubProject.tsx","Projects/index.tsx","Navigation/index.tsx","App.tsx","serviceWorker.ts","index.tsx","ts/smoothScroll.ts"],"names":["module","exports","Project","project","className","year","name","style","backgroundImage","image","target","href","url","GithubProject","description","topics","map","topic","githubProjects","Projects","projects","id","hydrautronics","ivdh","Navigation","navigationMenu","document","querySelector","hamburger","window","innerWidth","classList","contains","add","remove","setTimeout","onClick","event","toggleMenu","links","link","index","text","length","React","Component","App","Boolean","location","hostname","match","SmoothScroll","smoothScrollSettings","isMobileDevice","easings","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","settings","timingFunction","this","animationDuration","changeUrl","navigationBreakpoint","distanceFromTopDesktop","distanceFromTopMobile","currentEvent","checkForMobileDevice","setEventListeners","easing","customFunction","scrollMobile","scroll","navigator","userAgent","createEvent","e","isTouchDevice","self","querySelectorAll","forEach","smoothScrollElement","addEventListener","eventHandler","preventDefault","distanceFromTop","targetPosition","currentTarget","targetQuerySelector","tagName","getAttribute","history","replaceState","dataset","console","error","documentElement","clientWidth","getElementsByTagName","offsetTop","startPosition","pageYOffset","distance","duration","start","requestAnimationFrame","step","timestamp","previousPosition","parseInt","toString","abortAnimation","progress","newPos","scrollTo","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a7ef01fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hydrautronics.6de888c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ivdh.96161cf6.jpg\";","import React from \"react\";\n\ninterface ProjectProps {\n  project: Project;\n}\n\nconst Project = ({ project }: ProjectProps) => {\n  return (\n    <div className=\"project-showcase\">\n      <div className=\"project-showcase__content\">\n        <div>\n          <p>{project.year}</p>\n          <h2>{project.name}</h2>\n          <span className=\"project-showcase__line\"></span>\n        </div>\n      </div>\n      <div\n        className=\"project-showcase__image\"\n        style={{ backgroundImage: `url(${project.image})` }}\n      ></div>\n      <div className=\"project-showcase__link\">\n        <a className=\"button-1\" target=\"_blanc\" href={project.url}>\n          Bezoek pagina\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\n\nconst GithubProject = ({ project }: GithubProjectProps) => {\n  return (\n    <div className=\"github-project\">\n      <a href={project.url}>\n        <h3>{project.name}</h3>\n      </a>\n      <p className=\"github-project__description\">{project.description}</p>\n      <div className=\"github-project__subjects\">\n        {project.topics.map((topic) => (\n          <span className=\"github-project__subject\">{topic}</span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default GithubProject;\n","import React from \"react\";\nimport \"./projects.css\";\nimport Project from \"./Project\";\nimport GithubProject from \"./GithubProject\";\n\nconst Projects = ({ projects }: ProjectsProps) => {\n  return (\n    <>\n      <section id=\"projects\">\n        <Project project={projects.hydrautronics} />\n        <Project project={projects.ivdh} />\n      </section>\n      <section id=\"other-projects\">\n        <div className=\"other-projects__inner\">\n          <h2>Other Projects</h2>\n          <div className=\"github-projects\">\n            {githubProjects.map((project) => (\n              <GithubProject project={project} />\n            ))}\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nconst githubProjects: Array<GithubProject> = [\n  {\n    name: \"vsc-xcode-theme\",\n    url: \"#\",\n    description: \"Een kleurenthema voor Visual Studio Code.\",\n    topics: [\"json\"],\n  },\n  {\n    name: \"mmi\",\n    url: \"#\",\n    description:\n      \"Een website over maatschappelijke invloeden van de informatica.\",\n    topics: [\"React\", \"javascript\", \"html\", \"css\"],\n  },\n  {\n    name: \"smooth-scrolling\",\n    url: \"#\",\n    description: \"Smooth scrolling voor webpagina's\",\n    topics: [\"Typescript\"],\n  },\n];\n\nexport default Projects;\n","import React from \"react\";\n\nclass Navigation extends React.Component {\n  toggleMenu() {\n    const navigationMenu = document.querySelector(\n      \".navigation__menu\"\n    ) as HTMLElement;\n\n    const hamburger = document.querySelector(\".hamburger\") as HTMLElement;\n\n    if (window.innerWidth < 600) {\n      if (navigationMenu.classList.contains(\"visible\")) {\n        navigationMenu.classList.add(\"is-closing\");\n        navigationMenu.classList.remove(\"visible\");\n        hamburger.classList.remove(\"active\");\n        setTimeout(() => {\n          navigationMenu.classList.remove(\"is-closing\");\n        }, 500);\n      } else {\n        navigationMenu.classList.add(\"visible\");\n        hamburger.classList.add(\"active\");\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"navigation\">\n        <div className=\"navigation__inner\">\n          <div className=\"navigation__bar\">\n            <p className=\"navigation__label\">Wessel van Ree</p>\n            <div\n              className=\"hamburger\"\n              onClick={(event) => {\n                this.toggleMenu();\n              }}\n            >\n              <div className=\"hamburger__line hamburger__line--top\"></div>\n              <div className=\"hamburger__line hamburger__line--bottom\"></div>\n            </div>\n          </div>\n          <ul className={\"navigation__menu \"}>\n            {links.map((link, index) => (\n              <li>\n                <a\n                  href={link.url}\n                  onClick={(event) => {\n                    this.toggleMenu();\n                  }}\n                >\n                  {link.text}\n                </a>\n                {index < links.length - 1 ? (\n                  <span className=\"navigation__menu__line\"></span>\n                ) : null}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst links: Array<NavigationLink> = [\n  {\n    text: \"Projects\",\n    url: \"#\",\n  },\n  {\n    text: \"Other Projects\",\n    url: \"#other-projects\",\n  },\n];\n\nexport default Navigation;\n","import React from \"react\";\nimport Projects from \"./Projects\";\nimport Navigation from \"./Navigation\";\nimport hydrautronics from \"./images/hydrautronics.jpg\";\nimport ivdh from \"./images/ivdh.jpg\";\n\nfunction App() {\n  return (\n    <>\n      <Navigation />\n      <main>\n        <Projects projects={projects} />\n      </main>\n    </>\n  );\n}\n\nconst projects: Projects = {\n  hydrautronics: {\n    name: \"Hydrautronics\",\n    year: 2019,\n    image: hydrautronics,\n    url: \"https://hydrautronics.eu\",\n  },\n  ivdh: {\n    name: \"Ivdh Interieurontwerp\",\n    year: 2020,\n    image: ivdh,\n    url: \"https://ivdhinterieurontwerp.nl\",\n  },\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./ts/smoothScroll.ts\";\nimport SmoothScroll from \"./ts/smoothScroll\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst smoothScroll = new SmoothScroll();\n\nif (!smoothScroll.isMobileDevice) {\n  document.querySelector(\"body\")?.classList.add(\"js-no-touch\");\n}\n","interface Easings {\n  linear(t: number): number;\n  easeInCubic(t: number): number;\n  easeOutCubic(t: number): number;\n  easeInOutCubic(t: number): number;\n  easeInQuad(t: number): number;\n  easeOutQuad(t: number): number;\n  easeInOutQuad(t: number): number;\n  easeInQuart(t: number): number;\n  easeOutQuart(t: number): number;\n  easeInOutQuart(t: number): number;\n  easeInQuint(t: number): number;\n  easeOutQuint(t: number): number;\n  easeInOutQuint(t: number): number;\n}\n\ninterface Setting {\n  timingFunction(t: number): number;\n  animationDuration: number;\n  changeUrl: boolean;\n  navigationBreakpoint: number;\n  distanceFromTopDesktop: number;\n  distanceFromTopMobile: number;\n  customFunction?: Function;\n}\n\ninterface SmoothScrollSettings {\n  easing?: keyof Easings;\n  animationDuration?: number;\n  changeUrl?: boolean;\n  navigationBreakpoint?: number;\n  distanceFromTopDesktop?: number;\n  distanceFromTopMobile?: number;\n  customFunction?: Function;\n}\n\nclass SmoothScroll {\n  isMobileDevice: boolean = false;\n  easings: Easings = {\n    linear: (t: number): number => t,\n    easeInQuad: (t: number): number => t * t,\n    easeOutQuad: (t: number): number => t * (2 - t),\n    easeInOutQuad: (t: number): number =>\n      t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t,\n    easeInCubic: (t: number): number => t * t * t,\n    easeOutCubic: (t: number): number => --t * t * t + 1,\n    easeInOutCubic: (t: number): number =>\n      t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1,\n    easeInQuart: (t: number): number => t * t * t * t,\n    easeOutQuart: (t: number): number => 1 - --t * t * t * t,\n    easeInOutQuart: (t: number): number =>\n      t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t,\n    easeInQuint: (t: number): number => t * t * t * t * t,\n    easeOutQuint: (t: number): number => 1 + --t * t * t * t * t,\n    easeInOutQuint: (t: number): number =>\n      t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t,\n  };\n  settings: Setting = {\n    timingFunction: this.easings.easeOutQuint,\n    animationDuration: 600,\n    changeUrl: true,\n    navigationBreakpoint: 800,\n    distanceFromTopDesktop: 0,\n    distanceFromTopMobile: 0,\n    // customFunction: closeMenu,\n  };\n  currentEvent: null | MouseEvent = null;\n\n  constructor(smoothScrollSettings?: SmoothScrollSettings) {\n    this.checkForMobileDevice();\n    this.setEventListeners();\n    if (smoothScrollSettings) {\n      if (smoothScrollSettings.easing) {\n        this.settings.timingFunction = this.easings[\n          smoothScrollSettings.easing\n        ];\n      }\n      if (smoothScrollSettings.animationDuration) {\n        this.settings.animationDuration =\n          smoothScrollSettings.animationDuration;\n      }\n      if (smoothScrollSettings.changeUrl) {\n        this.settings.changeUrl = smoothScrollSettings.changeUrl;\n      }\n      if (smoothScrollSettings.navigationBreakpoint) {\n        this.settings.navigationBreakpoint =\n          smoothScrollSettings.navigationBreakpoint;\n      }\n      if (smoothScrollSettings.distanceFromTopDesktop) {\n        this.settings.distanceFromTopDesktop =\n          smoothScrollSettings.distanceFromTopDesktop;\n      }\n      if (smoothScrollSettings.distanceFromTopMobile) {\n        this.settings.distanceFromTopMobile =\n          smoothScrollSettings.distanceFromTopMobile;\n      }\n      if (smoothScrollSettings.customFunction) {\n        this.settings.customFunction = smoothScrollSettings.customFunction;\n      }\n    }\n  }\n\n  eventHandler() {\n    if (this.currentEvent != null) {\n      if (this.isMobileDevice) {\n        this.scrollMobile(this.currentEvent);\n      } else {\n        this.scroll(this.currentEvent);\n      }\n    }\n  }\n\n  checkForMobileDevice(): void {\n    if (\n      navigator.userAgent.match(/Android/i) ||\n      navigator.userAgent.match(/webOS/i) ||\n      navigator.userAgent.match(/iPhone/i) ||\n      navigator.userAgent.match(/iPad/i) ||\n      navigator.userAgent.match(/iPod/i) ||\n      navigator.userAgent.match(/BlackBerry/i) ||\n      navigator.userAgent.match(/Windows Phone/i) ||\n      isTouchDevice()\n    ) {\n      this.isMobileDevice = true;\n    }\n\n    function isTouchDevice() {\n      try {\n        document.createEvent(\"TouchEvent\");\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n  }\n\n  setEventListeners(): void {\n    const self = this;\n    // setting event listeners for anchor tags with # in the href attribute\n    const smoothScrollElements: NodeListOf<HTMLElement> = document.querySelectorAll(\n      \"a[href*='#'], .js-scroll\"\n    );\n    smoothScrollElements.forEach(function (smoothScrollElement) {\n      smoothScrollElement.addEventListener(\"click\", (event) => {\n        self.currentEvent = event;\n        self.eventHandler();\n      });\n    });\n  }\n\n  scroll(event: MouseEvent) {\n    event.preventDefault();\n    const currentTarget: HTMLElement = event.currentTarget as HTMLElement;\n    const self = this;\n\n    // get the target query selector\n    let targetQuerySelector: string | null = \"#\";\n    if (currentTarget.tagName === \"A\") {\n      targetQuerySelector = currentTarget.getAttribute(\"href\");\n      if (self.settings.changeUrl) {\n        window.history.replaceState(null, \"\", targetQuerySelector);\n      }\n    } else if (\n      currentTarget.classList.contains(\"js-scroll\") &&\n      currentTarget.dataset.target\n    ) {\n      targetQuerySelector = currentTarget.dataset.target;\n    } else {\n      console.error(\n        \"ERROR: No valid element provided, make sure you are using data-target='targetQuerySelector' to set the target element.\"\n      );\n    }\n\n    // the targetPosition depends on the screen width\n    const screenWidth =\n      window.innerWidth ||\n      document.documentElement.clientWidth ||\n      document.getElementsByTagName(\"body\")[0].clientWidth;\n\n    // calculate how many px will need to be scrolled\n    let distanceFromTop;\n    if (screenWidth > self.settings.navigationBreakpoint) {\n      distanceFromTop = self.settings.distanceFromTopDesktop;\n    } else {\n      distanceFromTop = self.settings.distanceFromTopMobile;\n    }\n\n    // if targetQuerySelector = \"#\" --> scroll to top\n    let targetElement: HTMLElement;\n    let targetPosition: number;\n\n    if (targetQuerySelector === \"#\") {\n      targetPosition = 0;\n    } else {\n      targetElement = document.querySelector(\n        targetQuerySelector!\n      ) as HTMLElement;\n      targetPosition = targetElement.offsetTop - distanceFromTop;\n    }\n\n    const startPosition = window.pageYOffset;\n    let distance = targetPosition - startPosition;\n    const duration = self.settings.animationDuration;\n    let start: number | null = null;\n\n    window.requestAnimationFrame(step);\n\n    // abort scrolling when user scrolls\n    let previousPosition: number | null = null;\n    let abortAnimation = false;\n\n    function step(timestamp: number) {\n      if (!start) {\n        start = timestamp;\n        previousPosition = window.pageYOffset;\n      }\n\n      // check if user scrolled\n      if (\n        previousPosition &&\n        parseInt(previousPosition.toString()) !== window.pageYOffset\n      ) {\n        abortAnimation = true;\n      }\n\n      // if user didn't scroll or is mobile device\n      if (!abortAnimation) {\n        // calculating next position\n        const progress = timestamp - start;\n        const t = progress / self.settings.animationDuration;\n        const newPos =\n          startPosition + distance * self.settings.timingFunction(t);\n\n        // scrolling and checking if animation should end\n        window.scrollTo(0, newPos);\n        if (progress < duration) {\n          previousPosition = newPos;\n          window.requestAnimationFrame(step);\n        } else {\n          previousPosition = null;\n        }\n      }\n    }\n\n    // update url if target is an id\n    if (self.settings.changeUrl && targetQuerySelector === \"#\") {\n      window.history.replaceState(null, \"\", \" \");\n    } else if (\n      self.settings.changeUrl &&\n      typeof targetQuerySelector === \"string\" &&\n      targetQuerySelector[0] === \"#\"\n    ) {\n      window.history.replaceState(null, \"\", targetQuerySelector);\n    }\n\n    // if custom function is provided\n    if (self.settings.customFunction) {\n      self.settings.customFunction();\n    }\n  }\n\n  scrollMobile(event: MouseEvent) {\n    event.preventDefault();\n    const currentTarget: HTMLElement = event.currentTarget as HTMLElement;\n    const self = this;\n\n    // get the target query selector\n    let targetQuerySelector: string | null = \"#\";\n    if (currentTarget.tagName === \"A\") {\n      targetQuerySelector = currentTarget.getAttribute(\"href\");\n      if (self.settings.changeUrl) {\n        window.history.replaceState(null, \"\", targetQuerySelector);\n      }\n    } else if (\n      currentTarget.classList.contains(\"js-scroll\") &&\n      currentTarget.dataset.target\n    ) {\n      targetQuerySelector = currentTarget.dataset.target;\n    } else {\n      console.error(\n        \"ERROR: No valid element provided, make sure you are using data-target='targetQuerySelector' to set the target element.\"\n      );\n    }\n\n    // the targetPosition depends on the screen width\n    const screenWidth =\n      window.innerWidth ||\n      document.documentElement.clientWidth ||\n      document.getElementsByTagName(\"body\")[0].clientWidth;\n\n    // calculate how many px will need to be scrolled\n    let distanceFromTop;\n    if (screenWidth > self.settings.navigationBreakpoint) {\n      distanceFromTop = self.settings.distanceFromTopDesktop;\n    } else {\n      distanceFromTop = self.settings.distanceFromTopMobile;\n    }\n\n    // if targetQuerySelector = \"#\" --> scroll to top\n    let targetElement: HTMLElement;\n    let targetPosition: number;\n\n    if (targetQuerySelector === \"#\") {\n      targetPosition = 0;\n    } else {\n      targetElement = document.querySelector(\n        targetQuerySelector!\n      ) as HTMLElement;\n      targetPosition = targetElement.offsetTop - distanceFromTop;\n    }\n\n    const startPosition = window.pageYOffset;\n    let distance = targetPosition - startPosition;\n    const duration = self.settings.animationDuration;\n    let start: number | null = null;\n\n    window.requestAnimationFrame(step);\n\n    function step(timestamp: number) {\n      if (!start) start = timestamp;\n      const progress = timestamp - start;\n      const t = progress / self.settings.animationDuration;\n      const newPos = startPosition + distance * self.settings.timingFunction(t);\n      window.scrollTo(0, newPos);\n      if (progress < duration) {\n        window.requestAnimationFrame(step);\n      }\n    }\n  }\n}\n\nexport default SmoothScroll;\n"],"sourceRoot":""}